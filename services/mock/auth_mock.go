// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mock; is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocksendString is a mock of sendString interface.
type MocksendString struct {
	ctrl     *gomock.Controller
	recorder *MocksendStringMockRecorder
}

// MocksendStringMockRecorder is the mock recorder for MocksendString.
type MocksendStringMockRecorder struct {
	mock *MocksendString
}

// NewMocksendString creates a new mock instance.
func NewMocksendString(ctrl *gomock.Controller) *MocksendString {
	mock := &MocksendString{ctrl: ctrl}
	mock.recorder = &MocksendStringMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocksendString) EXPECT() *MocksendStringMockRecorder {
	return m.recorder
}

// SendString mocks base method.
func (m *MocksendString) SendString(v string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendString", v)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendString indicates an expected call of SendString.
func (mr *MocksendStringMockRecorder) SendString(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendString", reflect.TypeOf((*MocksendString)(nil).SendString), v)
}
